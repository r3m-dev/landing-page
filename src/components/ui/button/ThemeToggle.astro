---

---

<button
  type="button"
  class="sw-btn-sm flex items-center gap-1 no-underline"
  aria-label="Toggle theme"
  aria-pressed="false"
  data-theme-toggle
>
  <span class="sr-only">Toggle theme</span>
  <span class="theme-icon" aria-hidden="true">
    <svg
      class="icon-sun"
      viewBox="0 0 24 24"
      width="16"
      height="16"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      ><circle cx="12" cy="12" r="4"></circle><path
        d="M12 2v2M12 20v2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M2 12h2M20 12h2M4.93 19.07l1.41-1.41M17.66 6.34l1.41-1.41"
      ></path></svg
    >
    <svg
      class="icon-moon"
      viewBox="0 0 24 24"
      width="16"
      height="16"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      ><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg
    >
  </span>
  <span class="label">Theme</span>
</button>

<script is:inline>
  (function () {
    const storageKey = 'theme';
    const root = document.documentElement;
    const btn = document.querySelector('[data-theme-toggle]');

    function applyTheme(theme) {
      const isDark = theme === 'dark';
      root.dataset.theme = isDark ? 'dark' : 'light';
      root.classList.toggle('dark', isDark);
      if (btn) btn.setAttribute('aria-pressed', String(isDark));
    }

    function getInitialTheme() {
      const saved = localStorage.getItem(storageKey);
      if (saved === 'dark' || saved === 'light') return saved;
      // Infer from current DOM as fallback
      return root.classList.contains('dark') || root.dataset.theme === 'dark'
        ? 'dark'
        : 'light';
    }

    let current = getInitialTheme();
    applyTheme(current);

    btn?.addEventListener('click', () => {
      current = current === 'dark' ? 'light' : 'dark';
      localStorage.setItem(storageKey, current);
      applyTheme(current);
    });
  })();
</script>

<style is:inline>
  [data-theme-toggle] .icon-moon {
    display: none;
  }
  html[data-theme='dark'] [data-theme-toggle] .icon-sun {
    display: none;
  }
  html[data-theme='dark'] [data-theme-toggle] .icon-moon {
    display: inline;
  }
</style>
